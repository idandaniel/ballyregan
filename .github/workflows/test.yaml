name: Tests

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths:
      - 'src/**'
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
        poetry-version: ["1.4.1"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ matrix.poetry-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.poetry-version }}-
            ${{ runner.os }}-poetry-

      - name: Install poetry
        run: |
          python -m pip install poetry==${{ matrix.poetry-version }}

      - name: Setup python to cache poetry packages
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Configure poetry
        run: |
          python -m poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          python -m poetry install
      
      - run: mkdir coverage
      
      - name: Run tests
        run: |
          poetry run python -m coverage run -m pytest > coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          
      - name: Store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage
